{"ast":null,"code":"var _jsxFileName = \"/Users/alexb/Desktop/contact-keeper/client/src/components/contacts/Contacts.js\";\nimport React, { Fragment, useContext, useState } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nexport const Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const contacts = contactContext.contacts;\n\n  const _useState = useState(''),\n        text = _useState.text,\n        setText = _useState.setText;\n\n  let filteredContacts;\n\n  const onChange = e => {\n    setText(e.target.value); // filteredContacts = contacts.filter(contact => {\n    //   contact.name.startsWith(text);\n    // });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search...\",\n    value: text,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), contacts.map(contact => React.createElement(ContactItem, {\n    contact: contact,\n    key: contact.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n};\nexport default Contacts;","map":{"version":3,"sources":["/Users/alexb/Desktop/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useState","ContactContext","ContactItem","Contacts","contactContext","contacts","text","setText","filteredContacts","onChange","e","target","value","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAMC,cAAc,GAAGL,UAAU,CAACE,cAAD,CAAjC;AAD4B,QAGpBI,QAHoB,GAGPD,cAHO,CAGpBC,QAHoB;;AAAA,oBAKFL,QAAQ,CAAC,EAAD,CALN;AAAA,QAKpBM,IALoB,aAKpBA,IALoB;AAAA,QAKdC,OALc,aAKdA,OALc;;AAO5B,MAAIC,gBAAJ;;AAEA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpBH,IAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CADoB,CAEpB;AACA;AACA;AACD,GALD;;AAOA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,KAAK,EAAEN,IAJT;AAKE,IAAA,QAAQ,EAAEG,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQGJ,QAAQ,CAACQ,GAAT,CAAaC,OAAO,IACnB,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,OAAtB;AAA+B,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CARH,CADF;AAcD,CA9BM;AAgCP,eAAeZ,QAAf","sourcesContent":["import React, { Fragment, useContext, useState } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\n\nexport const Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { contacts } = contactContext;\n\n  const { text, setText } = useState('');\n\n  let filteredContacts;\n\n  const onChange = e => {\n    setText(e.target.value);\n    // filteredContacts = contacts.filter(contact => {\n    //   contact.name.startsWith(text);\n    // });\n  };\n\n  return (\n    <Fragment>\n      <input\n        type='text'\n        name='text'\n        placeholder='Search...'\n        value={text}\n        onChange={onChange}\n      />\n      {contacts.map(contact => (\n        <ContactItem contact={contact} key={contact.id} />\n      ))}\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}