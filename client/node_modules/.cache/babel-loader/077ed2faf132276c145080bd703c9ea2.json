{"ast":null,"code":"import _slicedToArray from \"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexb/Desktop/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport axios from 'axios';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n\n  const _useReducer = useReducer(contactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Add contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Contet-Type': 'application/json',\n        'x-auth-token': localStorage.token\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set current contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filer contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(contactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      setCurrent,\n      addContact,\n      deleteContact,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/alexb/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","contactContext","contactReducer","axios","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","config","headers","localStorage","token","res","post","type","payload","data","err","response","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport axios from 'axios';\n\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR\n} from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  //Add contact\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Contet-Type': 'application/json',\n        'x-auth-token': localStorage.token\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  //Delete Contact\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  };\n\n  //Set current contact\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  };\n  //Clear Current contact\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  //Update contact\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  };\n\n  //Filer contacts\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  };\n\n  //Clear filter\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return (\n    <contactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        setCurrent,\n        addContact,\n        deleteContact,\n        clearCurrent,\n        updateContact,\n        filterContacts,\n        clearFilter\n      }}\n    >\n      {props.children}\n    </contactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}