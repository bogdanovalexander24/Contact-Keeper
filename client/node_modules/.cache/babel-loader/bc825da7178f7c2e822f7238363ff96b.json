{"ast":null,"code":"import _defineProperty from\"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState,useContext,useEffect}from'react';import AuthContext from'../../context/auth/authContext';import AlertContext from'../../context/alert/alertContext';export var Login=function Login(props){var _useState=useState({email:'',password:''}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var authContext=useContext(AuthContext);var alertContext=useContext(AlertContext);var login=authContext.login,clearErrors=authContext.clearErrors,error=authContext.error,isAuthenticated=authContext.isAuthenticated;var setAlert=alertContext.setAlert;var email=user.email,password=user.password;useEffect(function(){if(isAuthenticated){props.history.push('/');}if(error==='Invalid Credentials'){setAlert(error,'danger');clearErrors();}//eslint-disable-next-line\n},[error,isAuthenticated,props.history]);var onChange=function onChange(e){return setUser(_objectSpread({},user,_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(email===''||password===''){setAlert('Please fill in all fields','danger');}else{login({email:email,password:password});}};return React.createElement(\"div\",{className:\"form-container\"},React.createElement(\"h1\",null,\"Account \",React.createElement(\"span\",{className:\"text-primary\"},\"Login\")),React.createElement(\"form\",{onSubmit:onSubmit},React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"email\"},\"Email Adress\"),React.createElement(\"input\",{type:\"email\",name:\"email\",value:email,onChange:onChange})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),React.createElement(\"input\",{type:\"password\",name:\"password\",value:password,onChange:onChange,required:true})),React.createElement(\"input\",{type:\"submit\",value:\"Login\",className:\"btn btn-primary btn-block\",required:true})));};export default Login;","map":{"version":3,"sources":["/Users/alexb/Desktop/contact-keeper/client/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","AuthContext","AlertContext","Login","props","email","password","user","setUser","authContext","alertContext","login","clearErrors","error","isAuthenticated","setAlert","history","push","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":"whCAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,kCAAzB,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAC,KAAK,CAAI,eACJN,QAAQ,CAAC,CAC/BO,KAAK,CAAE,EADwB,CAE/BC,QAAQ,CAAE,EAFqB,CAAD,CADJ,wCACrBC,IADqB,eACfC,OADe,eAM5B,GAAMC,CAAAA,WAAW,CAAGV,UAAU,CAACE,WAAD,CAA9B,CACA,GAAMS,CAAAA,YAAY,CAAGX,UAAU,CAACG,YAAD,CAA/B,CAP4B,GASpBS,CAAAA,KAToB,CAS2BF,WAT3B,CASpBE,KAToB,CASbC,WATa,CAS2BH,WAT3B,CASbG,WATa,CASAC,KATA,CAS2BJ,WAT3B,CASAI,KATA,CASOC,eATP,CAS2BL,WAT3B,CASOK,eATP,IAUpBC,CAAAA,QAVoB,CAUPL,YAVO,CAUpBK,QAVoB,IAWpBV,CAAAA,KAXoB,CAWAE,IAXA,CAWpBF,KAXoB,CAWbC,QAXa,CAWAC,IAXA,CAWbD,QAXa,CAa5BN,SAAS,CAAC,UAAM,CACd,GAAIc,eAAJ,CAAqB,CACnBV,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAmB,GAAnB,EACD,CAED,GAAIJ,KAAK,GAAK,qBAAd,CAAqC,CACnCE,QAAQ,CAACF,KAAD,CAAQ,QAAR,CAAR,CACAD,WAAW,GACZ,CAED;AACD,CAXQ,CAWN,CAACC,KAAD,CAAQC,eAAR,CAAyBV,KAAK,CAACY,OAA/B,CAXM,CAAT,CAaA,GAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,QAAIX,CAAAA,OAAO,kBAAMD,IAAN,oBAAaY,CAAC,CAACC,MAAF,CAASC,IAAtB,CAA6BF,CAAC,CAACC,MAAF,CAASE,KAAtC,GAAX,EAAlB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAJ,CAAC,CAAI,CACpBA,CAAC,CAACK,cAAF,GACA,GAAInB,KAAK,GAAK,EAAV,EAAgBC,QAAQ,GAAK,EAAjC,CAAqC,CACnCS,QAAQ,CAAC,2BAAD,CAA8B,QAA9B,CAAR,CACD,CAFD,IAEO,CACLJ,KAAK,CAAC,CACJN,KAAK,CAALA,KADI,CAEJC,QAAQ,CAARA,QAFI,CAAD,CAAL,CAID,CACF,CAVD,CAYA,MACE,4BAAK,SAAS,CAAC,gBAAf,EACE,yCACU,4BAAM,SAAS,CAAC,cAAhB,UADV,CADF,CAIE,4BAAM,QAAQ,CAAEiB,QAAhB,EACE,2BAAK,SAAS,CAAC,YAAf,EACE,6BAAO,OAAO,CAAC,OAAf,iBADF,CAEE,6BAAO,IAAI,CAAC,OAAZ,CAAoB,IAAI,CAAC,OAAzB,CAAiC,KAAK,CAAElB,KAAxC,CAA+C,QAAQ,CAAEa,QAAzD,EAFF,CADF,CAKE,2BAAK,SAAS,CAAC,YAAf,EACE,6BAAO,OAAO,CAAC,UAAf,aADF,CAEE,6BACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAEZ,QAHT,CAIE,QAAQ,CAAEY,QAJZ,CAKE,QAAQ,KALV,EAFF,CALF,CAgBE,6BACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAC,OAFR,CAGE,SAAS,CAAC,2BAHZ,CAIE,QAAQ,KAJV,EAhBF,CAJF,CADF,CA8BD,CAtEM,CAwEP,cAAef,CAAAA,KAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport AuthContext from '../../context/auth/authContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nexport const Login = props => {\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  });\n\n  const authContext = useContext(AuthContext);\n  const alertContext = useContext(AlertContext);\n\n  const { login, clearErrors, error, isAuthenticated } = authContext;\n  const { setAlert } = alertContext;\n  const { email, password } = user;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n\n    if (error === 'Invalid Credentials') {\n      setAlert(error, 'danger');\n      clearErrors();\n    }\n\n    //eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  const onChange = e => setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (email === '' || password === '') {\n      setAlert('Please fill in all fields', 'danger');\n    } else {\n      login({\n        email,\n        password\n      });\n    }\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>\n        Account <span className='text-primary'>Login</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div className='form-group'>\n          <label htmlFor='email'>Email Adress</label>\n          <input type='email' name='email' value={email} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            name='password'\n            value={password}\n            onChange={onChange}\n            required\n          />\n        </div>\n\n        <input\n          type='submit'\n          value='Login'\n          className='btn btn-primary btn-block'\n          required\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}