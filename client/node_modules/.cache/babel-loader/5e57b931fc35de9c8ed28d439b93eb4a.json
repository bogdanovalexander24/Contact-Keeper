{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import contactContext from'./contactContext';import contactReducer from'./contactReducer';import axios from'axios';import{GET_CONTACTS,ADD_CONTACT,DELETE_CONTACT,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,CLEAR_CONTACTS,FILTER_CONTACTS,CLEAR_FILTER,CONTACT_ERROR}from'../types';var ContactState=function ContactState(props){var initialState={contacts:null,current:null,filtered:null,error:null,loading:true};var _useReducer=useReducer(contactReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];//Get contacts\nvar getContacts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var config,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:config={headers:{'x-auth-token':localStorage.token}};_context.prev=1;_context.next=4;return axios.get('/api/contacts/',config);case 4:res=_context.sent;dispatch({type:GET_CONTACTS,payload:res.data});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);dispatch({type:CONTACT_ERROR,payload:_context.t0.response.msg});case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function getContacts(){return _ref.apply(this,arguments);};}();//Add contact\nvar addContact=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(contact){var config,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{'Contet-Type':'application/json','x-auth-token':localStorage.token}};_context2.prev=1;_context2.next=4;return axios.post('/api/contacts',contact,config);case 4:res=_context2.sent;dispatch({type:ADD_CONTACT,payload:res.data});_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);dispatch({type:CONTACT_ERROR,payload:_context2.t0.response.msg});case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[1,8]]);}));return function addContact(_x){return _ref2.apply(this,arguments);};}();//Delete Contact\nvar deleteContact=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axios.delete(\"/api/contacts/\".concat(id));case 3:dispatch({type:DELETE_CONTACT,payload:id});_context3.next=9;break;case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);dispatch({type:CONTACT_ERROR,payload:_context3.t0.response.msg});case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return function deleteContact(_x2){return _ref3.apply(this,arguments);};}();//Set current contact\nvar setCurrent=function setCurrent(contact){dispatch({type:SET_CURRENT,payload:contact});};//Clear Current contact\nvar clearCurrent=function clearCurrent(){dispatch({type:CLEAR_CURRENT});};//Update contact\nvar updateContact=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(contact){var config,res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:config={headers:{'Contet-Type':'application/json','x-auth-token':localStorage.token}};_context4.prev=1;_context4.next=4;return axios.put(\"/api/contacts/\".concat(contact._id),contact,config);case 4:res=_context4.sent;dispatch({type:UPDATE_CONTACT,payload:res.data});_context4.next=11;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](1);dispatch({type:CONTACT_ERROR,payload:_context4.t0.response.msg});case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[1,8]]);}));return function updateContact(_x3){return _ref4.apply(this,arguments);};}();//Filer contacts\nvar filterContacts=function filterContacts(text){dispatch({type:FILTER_CONTACTS,payload:text});};//Clear filter\nvar clearFilter=function clearFilter(){dispatch({type:CLEAR_FILTER});};//Clear contacts\nvar clearContacts=function clearContacts(){dispatch({type:CLEAR_CONTACTS});};return React.createElement(contactContext.Provider,{value:{contacts:state.contacts,current:state.current,filtered:state.filtered,error:state.error,loading:state.loading,setCurrent:setCurrent,addContact:addContact,deleteContact:deleteContact,clearCurrent:clearCurrent,updateContact:updateContact,filterContacts:filterContacts,clearFilter:clearFilter,getContacts:getContacts,clearContacts:clearContacts}},props.children);};export default ContactState;","map":{"version":3,"sources":["/Users/alexb/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","contactContext","contactReducer","axios","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","CLEAR_CONTACTS","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","loading","state","dispatch","getContacts","config","headers","localStorage","token","get","res","type","payload","data","response","msg","addContact","contact","post","deleteContact","id","delete","setCurrent","clearCurrent","updateContact","put","_id","filterContacts","text","clearFilter","clearContacts","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport axios from 'axios';\n\nimport {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  CLEAR_CONTACTS,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR\n} from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null,\n    loading: true\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  //Get contacts\n  const getContacts = async () => {\n    const config = {\n      headers: {\n        'x-auth-token': localStorage.token\n      }\n    };\n    try {\n      const res = await axios.get('/api/contacts/', config);\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  //Add contact\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Contet-Type': 'application/json',\n        'x-auth-token': localStorage.token\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  //Delete Contact\n  const deleteContact = async id => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  //Set current contact\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  };\n  //Clear Current contact\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  //Update contact\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        'Contet-Type': 'application/json',\n        'x-auth-token': localStorage.token\n      }\n    };\n\n    try {\n      const res = await axios.put(\n        `/api/contacts/${contact._id}`,\n        contact,\n        config\n      );\n\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  //Filer contacts\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  };\n\n  //Clear filter\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  //Clear contacts\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  };\n\n  return (\n    <contactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        loading: state.loading,\n        setCurrent,\n        addContact,\n        deleteContact,\n        clearCurrent,\n        updateContact,\n        filterContacts,\n        clearFilter,\n        getContacts,\n        clearContacts\n      }}\n    >\n      {props.children}\n    </contactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}