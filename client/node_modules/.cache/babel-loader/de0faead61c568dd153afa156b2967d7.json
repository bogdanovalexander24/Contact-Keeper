{"ast":null,"code":"import _defineProperty from \"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexb/Desktop/contact-keeper/client/src/components/auth/Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport AuthContext from '../../context/auth/authContext';\nimport AlertContext from '../../context/alert/alertContext';\nexport const Login = props => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const authContext = useContext(AuthContext);\n  const alertContext = useContext(AlertContext);\n  const login = authContext.login,\n        clearErrors = authContext.clearErrors,\n        error = authContext.error,\n        isAuthenticated = authContext.isAuthenticated;\n  const setAlert = alertContext.setAlert;\n  const email = user.email,\n        password = user.password;\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n\n    if (error === 'Invalid Credentials') {\n      setAlert(error, 'danger');\n      clearErrors();\n    } //eslint-disable-next-line\n\n  }, [error, isAuthenticated, props.history]);\n\n  const onChange = e => setUser(_objectSpread({}, user, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (email === '' || password === '') {\n      setAlert('Please fill in all fields', 'danger');\n    } else {}\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Account \", React.createElement(\"span\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Login\")), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Email Adress\"), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"btn btn-primary btn-block\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })));\n};\nexport default Login;","map":{"version":3,"sources":["/Users/alexb/Desktop/contact-keeper/client/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","AuthContext","AlertContext","Login","props","email","password","user","setUser","authContext","alertContext","login","clearErrors","error","isAuthenticated","setAlert","history","push","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport AuthContext from '../../context/auth/authContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nexport const Login = props => {\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  });\n\n  const authContext = useContext(AuthContext);\n  const alertContext = useContext(AlertContext);\n\n  const { login, clearErrors, error, isAuthenticated } = authContext;\n  const { setAlert } = alertContext;\n  const { email, password } = user;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n\n    if (error === 'Invalid Credentials') {\n      setAlert(error, 'danger');\n      clearErrors();\n    }\n\n    //eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  const onChange = e => setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (email === '' || password === '') {\n      setAlert('Please fill in all fields', 'danger');\n    } else {\n    }\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>\n        Account <span className='text-primary'>Login</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div className='form-group'>\n          <label htmlFor='email'>Email Adress</label>\n          <input type='email' name='email' value={email} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            name='password'\n            value={password}\n            onChange={onChange}\n            required\n          />\n        </div>\n\n        <input\n          type='submit'\n          value='Login'\n          className='btn btn-primary btn-block'\n          required\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}