{"ast":null,"code":"import _defineProperty from \"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexb/Desktop/contact-keeper/client/src/components/contacts/ContactForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nexport const ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n\n  const _useState = useState({\n    name: '',\n    phone: '',\n    email: '',\n    type: 'personal'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        contact = _useState2[0],\n        setContact = _useState2[1];\n\n  const name = contact.name,\n        phone = contact.phone,\n        email = contact.email,\n        type = contact.type;\n  const addContact = contactContext.addContact,\n        current = contactContext.current,\n        clearCurrent = contactContext.clearCurrent,\n        updateContact = contactContext.updateContact;\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        phone: '',\n        email: '',\n        type: 'personal'\n      });\n    }\n  }, [contactContext, current]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (current !== null) {\n      addContact(contact);\n    } else {}\n\n    setContact({\n      name: '',\n      phone: '',\n      email: '',\n      type: 'personal'\n    });\n  };\n\n  const onChange = e => setContact(_objectSpread({}, contact, {\n    [e.target.name]: e.target.value\n  }));\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, current ? 'Edit Contact' : 'Add contact'), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Contact type\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === 'personal',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), '  ', \"Personal\", React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    onChange: onChange,\n    checked: type === 'professional',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), '  ', \"Professional\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: current ? 'Update Contact' : 'Add contact',\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), current && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Clear All\")));\n};\nexport default ContactForm;","map":{"version":3,"sources":["/Users/alexb/Desktop/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","name","phone","email","type","contact","setContact","addContact","current","clearCurrent","updateContact","onSubmit","e","preventDefault","onChange","target","value","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nexport const ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const [contact, setContact] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    type: 'personal'\n  });\n  const { name, phone, email, type } = contact;\n  const { addContact, current, clearCurrent, updateContact } = contactContext;\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        phone: '',\n        email: '',\n        type: 'personal'\n      });\n    }\n  }, [contactContext, current]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (current !== null) {\n      addContact(contact);\n    } else {\n    }\n    setContact({\n      name: '',\n      phone: '',\n      email: '',\n      type: 'personal'\n    });\n  };\n\n  const onChange = e =>\n    setContact({\n      ...contact,\n      [e.target.name]: e.target.value\n    });\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className='text-primary'>\n        {current ? 'Edit Contact' : 'Add contact'}\n      </h2>\n      <input\n        type='text'\n        placeholder='Name'\n        name='name'\n        value={name}\n        onChange={onChange}\n      />\n      <input\n        type='email'\n        placeholder='Email'\n        name='email'\n        value={email}\n        onChange={onChange}\n      />\n      <input\n        type='text'\n        placeholder='Phone'\n        name='phone'\n        value={phone}\n        onChange={onChange}\n      />\n      <h5>Contact type</h5>\n      <div>\n        <input\n          type='radio'\n          name='type'\n          value='personal'\n          checked={type === 'personal'}\n          onChange={onChange}\n        />\n        {'  '}\n        Personal\n        <input\n          type='radio'\n          name='type'\n          value='professional'\n          onChange={onChange}\n          checked={type === 'professional'}\n        />\n        {'  '}\n        Professional\n      </div>\n\n      <div>\n        <input\n          type='submit'\n          value={current ? 'Update Contact' : 'Add contact'}\n          className='btn btn-primary btn-block'\n        />\n      </div>\n      {current && (\n        <div>\n          <button className='btn btn-light btn-block' onClick={clearAll}>\n            Clear All\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}