{"ast":null,"code":"var _jsxFileName = \"/Users/alexb/Desktop/contact-keeper/client/src/components/contacts/Contacts.js\";\nimport React, { Fragment, useContext } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nexport const Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const contacts = contactContext.contacts,\n        filtered = contactContext.filtered;\n\n  if (contacts.length === 0) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Please add contact\");\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(TransitionGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, filtered === null ? contacts.map(contact => React.createElement(CSSTransition, {\n    key: contact.id,\n    timeout: 250,\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(ContactItem, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))) : filtered.map(contact => React.createElement(CSSTransition, {\n    key: contact.id,\n    timeout: 500,\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(ContactItem, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })))));\n};\nexport default Contacts;","map":{"version":3,"sources":["/Users/alexb/Desktop/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","ContactContext","ContactItem","CSSTransition","TransitionGroup","Contacts","contactContext","contacts","filtered","length","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAMC,cAAc,GAAGN,UAAU,CAACC,cAAD,CAAjC;AAD4B,QAGpBM,QAHoB,GAGGD,cAHH,CAGpBC,QAHoB;AAAA,QAGVC,QAHU,GAGGF,cAHH,CAGVE,QAHU;;AAK5B,MAAID,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACzB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD;;AAED,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,KAAK,IAAb,GACGD,QAAQ,CAACG,GAAT,CAAaC,OAAO,IAClB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA5B;AAAgC,IAAA,OAAO,EAAE,GAAzC;AAA8C,IAAA,SAAS,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADH,GAMGH,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAClB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA5B;AAAgC,IAAA,OAAO,EAAE,GAAzC;AAA8C,IAAA,SAAS,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAPN,CADF,CADF;AAiBD,CA1BM;AA4BP,eAAeN,QAAf","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nexport const Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { contacts, filtered } = contactContext;\n\n  if (contacts.length === 0) {\n    return <h4>Please add contact</h4>;\n  }\n\n  return (\n    <Fragment>\n      <TransitionGroup>\n        {filtered === null\n          ? contacts.map(contact => (\n              <CSSTransition key={contact.id} timeout={250} className='item'>\n                <ContactItem contact={contact} />\n              </CSSTransition>\n            ))\n          : filtered.map(contact => (\n              <CSSTransition key={contact.id} timeout={500} className='item'>\n                <ContactItem contact={contact} />\n              </CSSTransition>\n            ))}\n      </TransitionGroup>\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}