{"ast":null,"code":"import _defineProperty from \"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, GET_CONTACTS, CLEAR_CONTACTS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: action.payload,\n        loading: false\n      });\n\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [...state.contacts, action.payload]\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(contact => contact.id !== action.payload),\n        loading: false\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case UPDATE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      });\n\n    case FILTER_CONTACTS:\n      return _objectSpread({}, state, {\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(\"\".concat(action.payload));\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread({}, state, {\n        filtered: null\n      });\n\n    case CONTACT_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    case CLEAR_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: null,\n        filtered: null,\n        current: null,\n        error: null\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/alexb/Desktop/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","GET_CONTACTS","CLEAR_CONTACTS","state","action","type","contacts","payload","loading","filter","contact","id","current","map","filtered","regex","RegExp","name","match","email","error"],"mappings":";;;;;;AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,EAQEC,aARF,EASEC,YATF,EAUEC,cAVF,QAWO,UAXP;AAaA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,YAAL;AACE,+BACKE,KADL;AAEEG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFnB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKf,WAAL;AACE,+BACKU,KADL;AAEEG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAFZ;;AAKF,SAAKb,cAAL;AACE,+BACKS,KADL;AAEEG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,MAAf,CACRC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OADzB,CAFZ;AAKEC,QAAAA,OAAO,EAAE;AALX;;AAOF,SAAKb,WAAL;AACE,+BACKQ,KADL;AAEES,QAAAA,OAAO,EAAER,MAAM,CAACG;AAFlB;;AAIF,SAAKX,aAAL;AACE,+BACKO,KADL;AAEES,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAKf,cAAL;AACE,+BACKM,KADL;AAEEG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeO,GAAf,CAAmBH,OAAO,IAClCA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAP,CAAeI,EAA9B,GAAmCP,MAAM,CAACG,OAA1C,GAAoDG,OAD5C;AAFZ;;AAMF,SAAKZ,eAAL;AACE,+BACKK,KADL;AAEEW,QAAAA,QAAQ,EAAEX,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAsBC,OAAO,IAAI;AACzC,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,WAAcZ,MAAM,CAACG,OAArB,EAAd;AACA,iBAAOG,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACD,SAHS;AAFZ;;AAOF,SAAKhB,YAAL;AACE,+BACKI,KADL;AAEEW,QAAAA,QAAQ,EAAE;AAFZ;;AAIF,SAAKd,aAAL;AACE,+BACKG,KADL;AAEEiB,QAAAA,KAAK,EAAEhB,MAAM,CAACG;AAFhB;;AAIF,SAAKL,cAAL;AACE,+BACKC,KADL;AAEEG,QAAAA,QAAQ,EAAE,IAFZ;AAGEQ,QAAAA,QAAQ,EAAE,IAHZ;AAIEF,QAAAA,OAAO,EAAE,IAJX;AAKEQ,QAAAA,KAAK,EAAE;AALT;;AAOF;AACE,aAAOjB,KAAP;AAlEJ;AAoED,CArED","sourcesContent":["import {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n  GET_CONTACTS,\n  CLEAR_CONTACTS\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload,\n        loading: false\n      };\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        ),\n        loading: false\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      };\n\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id ? action.payload : contact\n        )\n      };\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`);\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null\n      };\n    case CONTACT_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case CLEAR_CONTACTS:\n      return {\n        ...state,\n        contacts: null,\n        filtered: null,\n        current: null,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}