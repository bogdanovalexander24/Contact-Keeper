{"ast":null,"code":"import _slicedToArray from \"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexb/Desktop/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Jill Johnson',\n      email: 'jill@gmail.com',\n      phone: '111-111-111',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'Sara Watson',\n      email: 'sara@gmail.com',\n      phone: '211-111-111',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'Hary White',\n      email: 'harry@gmail.com',\n      phone: '311-111-111',\n      type: 'professional'\n    }],\n    current: null,\n    filtered: null\n  };\n\n  const _useReducer = useReducer(contactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Add contact\n\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set current contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filer contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear filter\n\n\n  return React.createElement(contactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      setCurrent,\n      addContact,\n      deleteContact,\n      clearCurrent,\n      updateContact\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/alexb/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","contactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","current","filtered","state","dispatch","addContact","contact","v4","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContacts","text","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER\n} from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [\n      {\n        id: 1,\n        name: 'Jill Johnson',\n        email: 'jill@gmail.com',\n        phone: '111-111-111',\n        type: 'personal'\n      },\n      {\n        id: 2,\n        name: 'Sara Watson',\n        email: 'sara@gmail.com',\n        phone: '211-111-111',\n        type: 'personal'\n      },\n      {\n        id: 3,\n        name: 'Hary White',\n        email: 'harry@gmail.com',\n        phone: '311-111-111',\n        type: 'professional'\n      }\n    ],\n    current: null,\n    filtered: null\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  //Add contact\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  };\n\n  //Delete Contact\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  };\n\n  //Set current contact\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  };\n  //Clear Current contact\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  //Update contact\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  };\n  //Filer contacts\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  };\n  //Clear filter\n\n  return (\n    <contactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        setCurrent,\n        addContact,\n        deleteContact,\n        clearCurrent,\n        updateContact\n      }}\n    >\n      {props.children}\n    </contactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}