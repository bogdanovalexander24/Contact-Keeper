{"ast":null,"code":"var _jsxFileName = \"/Users/alexb/Desktop/contact-keeper/client/src/components/contacts/Contacts.js\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Spinner from '../layout/Spinner';\nexport const Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const contacts = contactContext.contacts,\n        filtered = contactContext.filtered,\n        getContacts = contactContext.getContacts,\n        loading = contactContext.loading;\n  useEffect(() => {\n    getContacts();\n  }, []);\n\n  if (contacts.length === 0) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Please add contact\");\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, contacts !== null && !loading ? React.createElement(TransitionGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, filtered === null ? contacts.map(contact => React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(ContactItem, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))) : filtered.map(contact => React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ContactItem, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })))) : React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n};\nexport default Contacts;","map":{"version":3,"sources":["/Users/alexb/Desktop/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","ContactContext","ContactItem","CSSTransition","TransitionGroup","Spinner","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAMC,cAAc,GAAGR,UAAU,CAACE,cAAD,CAAjC;AAD4B,QAGpBO,QAHoB,GAGyBD,cAHzB,CAGpBC,QAHoB;AAAA,QAGVC,QAHU,GAGyBF,cAHzB,CAGVE,QAHU;AAAA,QAGAC,WAHA,GAGyBH,cAHzB,CAGAG,WAHA;AAAA,QAGaC,OAHb,GAGyBJ,cAHzB,CAGaI,OAHb;AAK5BX,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIF,QAAQ,CAACI,MAAT,KAAoB,CAAxB,EAA2B;AACzB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD;;AAED,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,KAAK,IAAb,IAAqB,CAACG,OAAtB,GACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,KAAK,IAAb,GACGD,QAAQ,CAACK,GAAT,CAAaC,OAAO,IAClB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAE,GAA1C;AAA+C,IAAA,SAAS,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADH,GAMGL,QAAQ,CAACI,GAAT,CAAaC,OAAO,IAClB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAE,GAA1C;AAA+C,IAAA,SAAS,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAPN,CADD,GAeC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CADF;AAqBD,CAlCM;AAoCP,eAAeR,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Spinner from '../layout/Spinner';\n\nexport const Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { contacts, filtered, getContacts, loading } = contactContext;\n\n  useEffect(() => {\n    getContacts();\n  }, []);\n\n  if (contacts.length === 0) {\n    return <h4>Please add contact</h4>;\n  }\n\n  return (\n    <Fragment>\n      {contacts !== null && !loading ? (\n        <TransitionGroup>\n          {filtered === null\n            ? contacts.map(contact => (\n                <CSSTransition key={contact._id} timeout={500} className='item'>\n                  <ContactItem contact={contact} />\n                </CSSTransition>\n              ))\n            : filtered.map(contact => (\n                <CSSTransition key={contact._id} timeout={500} className='item'>\n                  <ContactItem contact={contact} />\n                </CSSTransition>\n              ))}\n        </TransitionGroup>\n      ) : (\n        <Spinner />\n      )}\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}