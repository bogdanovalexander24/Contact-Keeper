{"ast":null,"code":"import _defineProperty from \"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexb/Desktop/contact-keeper/client/src/components/contacts/ContactForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nexport const ContactForm = () => {\n  const contactContext = useState(ContactContext);\n\n  const _useState = useState({\n    name: '',\n    phone: '',\n    email: '',\n    type: 'personal'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        contact = _useState2[0],\n        setContact = _useState2[1];\n\n  const name = contact.name,\n        phone = contact.phone,\n        email = contact.email,\n        type = contact.type;\n\n  const onSubmit = e => {\n    e.preventDefault();\n    contactContext.addContact(contact);\n    setContact({\n      name: '',\n      phone: '',\n      email: '',\n      type: 'personal'\n    });\n  };\n\n  const onChange = e => setContact(_objectSpread({}, contact, {\n    [e.target.name]: e.target.value\n  }));\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Add Contact\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Phone\",\n    value: phone,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Contact type\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === 'personal',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), ' ', \"Personal\", React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    onChange: onChange,\n    checked: type === 'professional',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), ' ', \"Professional\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Add contact\",\n    className: \"btn btn-primary btn-block\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })));\n};\nexport default ContactForm;","map":{"version":3,"sources":["/Users/alexb/Desktop/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","ContactContext","ContactForm","contactContext","name","phone","email","type","contact","setContact","onSubmit","e","preventDefault","addContact","onChange","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nexport const ContactForm = () => {\n  const contactContext = useState(ContactContext);\n  const [contact, setContact] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    type: 'personal'\n  });\n  const { name, phone, email, type } = contact;\n\n  const onSubmit = e => {\n    e.preventDefault();\n    contactContext.addContact(contact);\n    setContact({\n      name: '',\n      phone: '',\n      email: '',\n      type: 'personal'\n    });\n  };\n\n  const onChange = e =>\n    setContact({\n      ...contact,\n      [e.target.name]: e.target.value\n    });\n\n  return (\n    <form>\n      <h2 className='text-primary'>Add Contact</h2>\n      <input type='text' placeholder='Name' value={name} onChange={onChange} />\n      <input\n        type='email'\n        placeholder='Email'\n        value={email}\n        onChange={onChange}\n      />\n      <input\n        type='text'\n        placeholder='Phone'\n        value={phone}\n        onChange={onChange}\n      />\n      <h5>Contact type</h5>\n      <input\n        type='radio'\n        name='type'\n        value='personal'\n        checked={type === 'personal'}\n        onChange={onChange}\n      />{' '}\n      Personal\n      <input\n        type='radio'\n        name='type'\n        value='professional'\n        onChange={onChange}\n        checked={type === 'professional'}\n      />{' '}\n      Professional\n      <div>\n        <input\n          type='submit'\n          value='Add contact'\n          className='btn btn-primary btn-block'\n          onSubmit={onSubmit}\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}