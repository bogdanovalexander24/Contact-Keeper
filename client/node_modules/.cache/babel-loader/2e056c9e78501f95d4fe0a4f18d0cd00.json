{"ast":null,"code":"import _defineProperty from\"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/alexb/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState,useContext,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';export var ContactForm=function ContactForm(){var contactContext=useContext(ContactContext);var _useState=useState({name:'',phone:'',email:'',type:'personal'}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var name=contact.name,phone=contact.phone,email=contact.email,type=contact.type;var addContact=contactContext.addContact,current=contactContext.current,clearCurrent=contactContext.clearCurrent,updateContact=contactContext.updateContact;useEffect(function(){if(current!==null){setContact(current);}else{setContact({name:'',phone:'',email:'',type:'personal'});}},[contactContext,current]);var onSubmit=function onSubmit(e){e.preventDefault();if(current===null){addContact(contact);}else{updateContact(contact);}setContact({name:'',phone:'',email:'',type:'personal'});};var onChange=function onChange(e){return setContact(_objectSpread({},contact,_defineProperty({},e.target.name,e.target.value)));};var clearAll=function clearAll(){clearCurrent();};return React.createElement(\"form\",{onSubmit:onSubmit},React.createElement(\"h2\",{className:\"text-primary\"},current?'Edit Contact':'Add contact'),React.createElement(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:onChange}),React.createElement(\"input\",{type:\"email\",placeholder:\"Email\",name:\"email\",value:email,onChange:onChange}),React.createElement(\"input\",{type:\"text\",placeholder:\"Phone\",name:\"phone\",value:phone,onChange:onChange}),React.createElement(\"h5\",null,\"Contact type\"),React.createElement(\"div\",null,React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"personal\",checked:type==='personal',onChange:onChange}),'  ',\"Personal\",React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"professional\",onChange:onChange,checked:type==='professional'}),'  ',\"Professional\"),React.createElement(\"div\",null,React.createElement(\"input\",{type:\"submit\",value:current?'Update Contact':'Add contact',className:\"btn btn-primary btn-block\"})),current&&React.createElement(\"div\",null,React.createElement(\"button\",{className:\"btn btn-light btn-block\",onClick:clearAll},\"Clear All\")));};export default ContactForm;","map":{"version":3,"sources":["/Users/alexb/Desktop/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","name","phone","email","type","contact","setContact","addContact","current","clearCurrent","updateContact","onSubmit","e","preventDefault","onChange","target","value","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nexport const ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const [contact, setContact] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    type: 'personal'\n  });\n  const { name, phone, email, type } = contact;\n  const { addContact, current, clearCurrent, updateContact } = contactContext;\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        phone: '',\n        email: '',\n        type: 'personal'\n      });\n    }\n  }, [contactContext, current]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n    setContact({\n      name: '',\n      phone: '',\n      email: '',\n      type: 'personal'\n    });\n  };\n\n  const onChange = e =>\n    setContact({\n      ...contact,\n      [e.target.name]: e.target.value\n    });\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className='text-primary'>\n        {current ? 'Edit Contact' : 'Add contact'}\n      </h2>\n      <input\n        type='text'\n        placeholder='Name'\n        name='name'\n        value={name}\n        onChange={onChange}\n      />\n      <input\n        type='email'\n        placeholder='Email'\n        name='email'\n        value={email}\n        onChange={onChange}\n      />\n      <input\n        type='text'\n        placeholder='Phone'\n        name='phone'\n        value={phone}\n        onChange={onChange}\n      />\n      <h5>Contact type</h5>\n      <div>\n        <input\n          type='radio'\n          name='type'\n          value='personal'\n          checked={type === 'personal'}\n          onChange={onChange}\n        />\n        {'  '}\n        Personal\n        <input\n          type='radio'\n          name='type'\n          value='professional'\n          onChange={onChange}\n          checked={type === 'professional'}\n        />\n        {'  '}\n        Professional\n      </div>\n\n      <div>\n        <input\n          type='submit'\n          value={current ? 'Update Contact' : 'Add contact'}\n          className='btn btn-primary btn-block'\n        />\n      </div>\n      {current && (\n        <div>\n          <button className='btn btn-light btn-block' onClick={clearAll}>\n            Clear All\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}